{"ast":null,"code":"import * as actions from './actions';\nconst initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.INCREMENT:\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case actions.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actions.ADD5:\n      return { ...state,\n        counter: state.counter + action.val\n      };\n\n    case actions.SUBTRACT5:\n      return { ...state,\n        counter: state.counter - action.val\n      };\n\n    case actions.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: Math.random(),\n          value: state.counter\n        })\n      };\n\n    case actions.DELETE_RESULT:\n      const updatedArray = state.results.filter(result => {\n        return result.id !== action.resultElId;\n      });\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/bala/Desktop/Redux/src/store/reducer.js"],"names":["actions","initialState","counter","results","reducer","state","action","type","INCREMENT","DECREMENT","ADD5","val","SUBTRACT5","STORE_RESULT","concat","id","Math","random","value","DELETE_RESULT","updatedArray","filter","result","resultElId"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,WAAzB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,CADS;AAEjBC,EAAAA,OAAO,EAAC;AAFS,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAE9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,OAAO,CAACQ,SAAb;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAc;AAFpB,OAAP;;AAIJ,SAAKF,OAAO,CAACS,SAAb;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAc;AAFpB,OAAP;;AAIJ,SAAKF,OAAO,CAACU,IAAb;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAcI,MAAM,CAACK;AAF3B,OAAP;;AAIJ,SAAKX,OAAO,CAACY,SAAb;AACI,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAcI,MAAM,CAACK;AAF3B,OAAP;;AAIJ,SAAKX,OAAO,CAACa,YAAb;AACI,aAAM,EACF,GAAGR,KADD;AAEFF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcW,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAL;AAAoBC,UAAAA,KAAK,EAAEb,KAAK,CAACH;AAAjC,SAArB;AAFP,OAAN;;AAIJ,SAAKF,OAAO,CAACmB,aAAb;AACI,YAAMC,YAAY,GAAGf,KAAK,CAACF,OAAN,CAAckB,MAAd,CAAqBC,MAAM,IAAI;AACjD,eAAQA,MAAM,CAACP,EAAP,KAAcT,MAAM,CAACiB,UAA7B;AAAyC,OADvB,CAArB;AAEA,aAAM,EACF,GAAGlB,KADD;AAEFF,QAAAA,OAAO,EAAEiB;AAFP,OAAN;AA7BR;;AAmCA,SAAOf,KAAP;AACH,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import * as actions from './actions';\n\n\nconst initialState = {\n    counter:0,\n    results:[]\n}\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actions.INCREMENT:\n            return {\n                ...state,\n                counter: state.counter+1\n            };\n        case actions.DECREMENT:\n            return {\n                ...state,\n                counter: state.counter-1\n            }\n        case actions.ADD5:\n            return {\n                ...state,\n                counter: state.counter+action.val\n            };\n        case actions.SUBTRACT5:\n            return {\n                ...state,\n                counter: state.counter-action.val\n            };\n        case actions.STORE_RESULT:\n            return{\n                ...state,\n                results: state.results.concat({id: Math.random(), value: state.counter})\n            };\n        case actions.DELETE_RESULT:\n            const updatedArray = state.results.filter(result => {\n               return( result.id !== action.resultElId)});\n            return{\n                ...state,\n                results: updatedArray\n                }\n\n    }\n    return state\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}