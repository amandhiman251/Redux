{"ast":null,"code":"import * as actions from '../actions';\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: Math.random(),\n          value: state.ctr\n        })\n      };\n\n    case actions.DELETE_RESULT:\n      const updatedArray = state.results.filter(result => {\n        return result.id !== action.resultElId;\n      });\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/bala/Desktop/Redux/src/store/reducers/results.js"],"names":["actions","initialState","results","reducer","state","action","type","STORE_RESULT","concat","id","Math","random","value","ctr","DELETE_RESULT","updatedArray","filter","result","resultElId"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAE9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,OAAO,CAACO,YAAb;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAL;AAAoBC,UAAAA,KAAK,EAAER,KAAK,CAACS;AAAjC,SAArB;AAFP,OAAN;;AAIJ,SAAKb,OAAO,CAACc,aAAb;AACI,YAAMC,YAAY,GAAGX,KAAK,CAACF,OAAN,CAAcc,MAAd,CAAqBC,MAAM,IAAI;AACjD,eAAQA,MAAM,CAACR,EAAP,KAAcJ,MAAM,CAACa,UAA7B;AAAyC,OADvB,CAArB;AAEA,aAAM,EACF,GAAGd,KADD;AAEFF,QAAAA,OAAO,EAAEa;AAFP,OAAN;AATR;;AAeA,SAAOX,KAAP;AACH,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["import * as actions from '../actions';\n\n\nconst initialState = {\n    results:[]\n}\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actions.STORE_RESULT:\n            return{\n                ...state,\n                results: state.results.concat({id: Math.random(), value: state.ctr})\n            };\n        case actions.DELETE_RESULT:\n            const updatedArray = state.results.filter(result => {\n               return( result.id !== action.resultElId)});\n            return{\n                ...state,\n                results: updatedArray\n                }\n\n    }\n    return state\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}