{"ast":null,"code":"import _objectSpread from\"/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actions from'../actions';var initialState={results:[]};var resultsReducer=function resultsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actions.STORE_RESULT:return _objectSpread(_objectSpread({},state),{},{results:state.results.concat({id:Math.random(),value:action.result})});case actions.DELETE_RESULT:var updatedArray=state.results.filter(function(result){return result.id!==action.resultElId;});return _objectSpread(_objectSpread({},state),{},{results:updatedArray});default:return state;}};export default resultsReducer;","map":{"version":3,"sources":["/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/src/store/reducers/results.js"],"names":["actions","initialState","results","resultsReducer","state","action","type","STORE_RESULT","concat","id","Math","random","value","result","DELETE_RESULT","updatedArray","filter","resultElId"],"mappings":"yMAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,YAAzB,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAC,EADS,CAArB,CAKA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CAErD,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKN,CAAAA,OAAO,CAACO,YAAb,CACI,sCACOH,KADP,MAEIF,OAAO,CAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB,CAACC,EAAE,CAAEC,IAAI,CAACC,MAAL,EAAL,CAAoBC,KAAK,CAAEP,MAAM,CAACQ,MAAlC,CAArB,CAFb,GAIJ,IAAKb,CAAAA,OAAO,CAACc,aAAb,CACI,GAAMC,CAAAA,YAAY,CAAGX,KAAK,CAACF,OAAN,CAAcc,MAAd,CAAqB,SAAAH,MAAM,CAAI,CACjD,MAAQA,CAAAA,MAAM,CAACJ,EAAP,GAAcJ,MAAM,CAACY,UAA7B,CAAyC,CADvB,CAArB,CAEA,sCACOb,KADP,MAEIF,OAAO,CAAEa,YAFb,GAII,QACI,MAAOX,CAAAA,KAAP,CAdhB,CAgBH,CAlBD,CAoBA,cAAeD,CAAAA,cAAf","sourcesContent":["import * as actions from '../actions';\n\n\nconst initialState = {\n    results:[]\n}\n\n\nconst resultsReducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actions.STORE_RESULT:\n            return{\n                ...state,\n                results: state.results.concat({id: Math.random(), value: action.result})\n            };\n        case actions.DELETE_RESULT:\n            const updatedArray = state.results.filter(result => {\n               return( result.id !== action.resultElId)});\n            return{\n                ...state,\n                results: updatedArray\n                };\n                default:\n                    return state\n    }\n}\n\nexport default resultsReducer;"]},"metadata":{},"sourceType":"module"}