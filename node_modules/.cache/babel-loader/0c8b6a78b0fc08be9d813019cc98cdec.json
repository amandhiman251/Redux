{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bala/Desktop/project-3/src/container/course/course.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Course extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      course: {},\n      title: '',\n      axios: null\n    };\n  }\n\n  componentDidMount() {\n    this.clickchangetitleHandler();\n  }\n\n  componentDidUpdate() {\n    this.clickchangetitleHandler();\n  }\n\n  clickchangetitleHandler() {\n    let courseid = this.props.match.params.courseid;\n    const query = new URLSearchParams(this.props.location.search);\n\n    for (let params of query.entries()) {\n      if (this.state.title !== params[1]) {\n        this.setState({\n          title: params[1]\n        });\n      }\n    }\n\n    if (this.state.axios !== courseid) {\n      this.setState({\n        axios: courseid\n      });\n      axios.get('https://jsonplaceholder.typicode.com/posts/' + this.props.match.params.courseid).then(response => {\n        this.setState({\n          course: response.data\n        });\n        console.log(response.data);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.state.course.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/bala/Desktop/project-3/src/container/course/course.js"],"names":["React","Component","axios","Course","state","course","title","componentDidMount","clickchangetitleHandler","componentDidUpdate","courseid","props","match","params","query","URLSearchParams","location","search","entries","setState","get","then","response","data","console","log","render","body"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACrB;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,KAAK,EAAC,EAFJ;AAGFJ,MAAAA,KAAK,EAAE;AAHL,KADqB;AAAA;;AAM3BK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,uBAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKD,uBAAL;AACH;;AACDA,EAAAA,uBAAuB,GAAE;AACrB,QAAIE,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAAvC;AACA,UAAMI,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,MAAxC,CAAd;;AACA,SAAI,IAAIJ,MAAR,IAAkBC,KAAK,CAACI,OAAN,EAAlB,EAAkC;AAC9B,UAAG,KAAKd,KAAL,CAAWE,KAAX,KAAqBO,MAAM,CAAC,CAAD,CAA9B,EAAkC;AAClC,aAAKM,QAAL,CAAc;AAACb,UAAAA,KAAK,EAACO,MAAM,CAAC,CAAD;AAAb,SAAd;AACC;AACJ;;AAEG,QAAI,KAAKT,KAAL,CAAWF,KAAX,KAAmBQ,QAAvB,EAAgC;AAC5B,WAAKS,QAAL,CAAc;AAACjB,QAAAA,KAAK,EAACQ;AAAP,OAAd;AACRR,MAAAA,KAAK,CAACkB,GAAN,CAAU,gDAAgD,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAAlF,EACCW,IADD,CACMC,QAAQ,IAAI;AACd,aAAKH,QAAL,CAAc;AAACd,UAAAA,MAAM,EAACiB,QAAQ,CAACC;AAAjB,SAAd;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACP,OAJD;AAKC;AACJ;;AAGDG,EAAAA,MAAM,GAAE;AACR,wBAAO;AAAA,8BACC;AAAA,kBAAK,KAAKtB,KAAL,CAAWE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,kBAAK,KAAKF,KAAL,CAAWC,MAAX,CAAkBsB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIC;;AAtC0B;;AA0C/B,eAAexB,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\n\nclass Course extends Component {\n    state={\n        course:{},\n        title:'',\n        axios: null\n    }\n    componentDidMount() {\n        this.clickchangetitleHandler();\n    }\n        \n    componentDidUpdate(){\n        this.clickchangetitleHandler();\n    }\n    clickchangetitleHandler(){\n        let courseid = this.props.match.params.courseid;\n        const query = new URLSearchParams(this.props.location.search);\n        for(let params of query.entries()){\n            if(this.state.title !== params[1]){\n            this.setState({title:params[1]})\n            }\n        } \n        \n            if (this.state.axios!==courseid){\n                this.setState({axios:courseid});\n        axios.get('https://jsonplaceholder.typicode.com/posts/' + this.props.match.params.courseid)\n        .then(response => {\n            this.setState({course:response.data});\n                console.log(response.data);\n        }) \n        }  \n    }\n\n        \n    render(){\n    return <div>\n            <h1>{this.state.title}</h1>\n            <h4>{this.state.course.body}</h4>\n            </div>\n    }     \n\n}\n\nexport default Course;"]},"metadata":{},"sourceType":"module"}