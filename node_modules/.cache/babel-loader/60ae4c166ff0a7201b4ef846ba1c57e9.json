{"ast":null,"code":"import * as actions from '../actions/actions';\nconst initialState = {\n  results: []\n};\n\nconst resultsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: Math.random(),\n          value: action.result\n        })\n      };\n\n    case actions.DELETE_RESULT:\n      const updatedArray = state.results.filter(result => {\n        return result.id !== action.resultElId;\n      });\n      return { ...state,\n        results: updatedArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default resultsReducer;","map":{"version":3,"sources":["/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/src/store/reducers/results.js"],"names":["actions","initialState","results","resultsReducer","state","action","type","STORE_RESULT","concat","id","Math","random","value","result","DELETE_RESULT","updatedArray","filter","resultElId"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,oBAAzB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAErD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,OAAO,CAACO,YAAb;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAL;AAAoBC,UAAAA,KAAK,EAAEP,MAAM,CAACQ;AAAlC,SAArB;AAFP,OAAN;;AAIJ,SAAKb,OAAO,CAACc,aAAb;AACI,YAAMC,YAAY,GAAGX,KAAK,CAACF,OAAN,CAAcc,MAAd,CAAqBH,MAAM,IAAI;AACjD,eAAQA,MAAM,CAACJ,EAAP,KAAcJ,MAAM,CAACY,UAA7B;AAAyC,OADvB,CAArB;AAEA,aAAM,EACF,GAAGb,KADD;AAEFF,QAAAA,OAAO,EAAEa;AAFP,OAAN;;AAII;AACI,aAAOX,KAAP;AAdhB;AAgBH,CAlBD;;AAoBA,eAAeD,cAAf","sourcesContent":["import * as actions from '../actions/actions';\n\n\nconst initialState = {\n    results:[]\n}\n\n\nconst resultsReducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actions.STORE_RESULT:\n            return{\n                ...state,\n                results: state.results.concat({id: Math.random(), value: action.result})\n            };\n        case actions.DELETE_RESULT:\n            const updatedArray = state.results.filter(result => {\n               return( result.id !== action.resultElId)});\n            return{\n                ...state,\n                results: updatedArray\n                };\n                default:\n                    return state\n    }\n}\n\nexport default resultsReducer;"]},"metadata":{},"sourceType":"module"}