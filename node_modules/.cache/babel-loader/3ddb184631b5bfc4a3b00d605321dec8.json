{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport counterReducer from './store/reducers/counter';\nimport resultsReducer from './store/reducers/results';\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultsReducer\n});\n\nconst logger = store => {\n  return nxt => {\n    return action => {\n      console.log(\"[middleware] Dispaching\", action);\n      const result = nxt(action);\n      console.log(\"[middleware] nextState\", store.getState());\n      return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger)));\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","createStore","combineReducers","applyMiddleware","compose","Provider","counterReducer","resultsReducer","rootReducer","ctr","res","logger","store","nxt","action","console","log","result","getState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAGA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,GAAG,EAAEH,cAD2B;AAEhCI,EAAAA,GAAG,EAAEH;AAF2B,CAAD,CAAnC;;AAKA,MAAMI,MAAM,GAAGC,KAAK,IAAG;AACnB,SAAOC,GAAG,IAAG;AACT,WAAOC,MAAM,IAAG;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCF,MAAtC;AACA,YAAMG,MAAM,GAAGJ,GAAG,CAACC,MAAD,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCJ,KAAK,CAACM,QAAN,EAArC;AACA,aAAOD,MAAP;AACH,KALD;AAMH,GAPD;AAQH,CATD;;AAWA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAxE;AAIA,MAAMQ,KAAK,GAAGX,WAAW,CAACO,WAAD,EAAcW,gBAAgB,CAAChB,eAAe,CAACQ,MAAD,CAAhB,CAA9B,CAAzB;AAEAb,QAAQ,CAACwB,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA,yBACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAIIW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ;AAMAxB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport counterReducer from './store/reducers/counter';\nimport resultsReducer from './store/reducers/results';\n\n\nconst rootReducer = combineReducers({\n    ctr: counterReducer,\n    res: resultsReducer\n});\n\nconst logger = store =>{\n    return nxt =>{\n        return action =>{\n            console.log(\"[middleware] Dispaching\",action);\n            const result = nxt(action);\n            console.log(\"[middleware] nextState\",store.getState());\n            return result;\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}