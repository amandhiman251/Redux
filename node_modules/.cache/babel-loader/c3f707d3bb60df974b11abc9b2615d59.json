{"ast":null,"code":"import _objectSpread from\"/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actions from'../actions';var initialState={counter:0};var counterReducer=function counterReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actions.INCREMENT:return _objectSpread(_objectSpread({},state),{},{counter:state.counter+1});case actions.DECREMENT:return _objectSpread(_objectSpread({},state),{},{counter:state.counter-1});case actions.ADD5:return _objectSpread(_objectSpread({},state),{},{counter:state.counter+action.val});case actions.SUBTRACT5:return _objectSpread(_objectSpread({},state),{},{counter:state.counter-action.val});default:return state;}};export default counterReducer;","map":{"version":3,"sources":["/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/src/store/reducers/counter.js"],"names":["actions","initialState","counter","counterReducer","state","action","type","INCREMENT","DECREMENT","ADD5","val","SUBTRACT5"],"mappings":"yMAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,YAAzB,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAC,CADS,CAArB,CAKA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CAErD,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKN,CAAAA,OAAO,CAACO,SAAb,CACI,sCACOH,KADP,MAEIF,OAAO,CAAEE,KAAK,CAACF,OAAN,CAAc,CAF3B,GAIJ,IAAKF,CAAAA,OAAO,CAACQ,SAAb,CACI,sCACOJ,KADP,MAEIF,OAAO,CAAEE,KAAK,CAACF,OAAN,CAAc,CAF3B,GAIJ,IAAKF,CAAAA,OAAO,CAACS,IAAb,CACI,sCACOL,KADP,MAEIF,OAAO,CAAEE,KAAK,CAACF,OAAN,CAAcG,MAAM,CAACK,GAFlC,GAIJ,IAAKV,CAAAA,OAAO,CAACW,SAAb,CACI,sCACOP,KADP,MAEIF,OAAO,CAAEE,KAAK,CAACF,OAAN,CAAcG,MAAM,CAACK,GAFlC,GAIJ,QACI,MAAON,CAAAA,KAAP,CAtBR,CAyBH,CA3BD,CA6BA,cAAeD,CAAAA,cAAf","sourcesContent":["import * as actions from '../actions';\n\n\nconst initialState = {\n    counter:0\n}\n\n\nconst counterReducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actions.INCREMENT:\n            return {\n                ...state,\n                counter: state.counter+1\n            };\n        case actions.DECREMENT:\n            return {\n                ...state,\n                counter: state.counter-1\n            }\n        case actions.ADD5:\n            return {\n                ...state,\n                counter: state.counter+action.val\n            };\n        case actions.SUBTRACT5:\n            return {\n                ...state,\n                counter: state.counter-action.val\n            };\n        default:\n            return state\n\n    }\n}\n\nexport default counterReducer;"]},"metadata":{},"sourceType":"module"}