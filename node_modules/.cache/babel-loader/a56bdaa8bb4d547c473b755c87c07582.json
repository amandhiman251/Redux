{"ast":null,"code":"import * as actionTypes from '../actions/actionsTypes';\nimport { updatedObject } from '../utility';\nconst initialState = {\n  counter: 0\n};\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return updatedObject(state, {\n        counter: state.counter + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return updatedObject(state, {\n        counter: state.counter - 1\n      });\n\n    case actionTypes.ADD5:\n      return updatedObject(state, {\n        counter: state.counter + action.val\n      });\n\n    case actionTypes.SUBTRACT5:\n      return updatedObject(state, {\n        counter: state.counter - action.val\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["/Users/bala/Desktop/React Module Independent of BurgerBuilder and Assignments/Redux/src/store/reducers/counter.js"],"names":["actionTypes","updatedObject","initialState","counter","counterReducer","state","action","type","INCREMENT","DECREMENT","ADD5","val","SUBTRACT5"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,yBAA7B;AACA,SAASC,aAAT,QAA8B,YAA9B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAErD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,SAAjB;AACI,aAAOP,aAAa,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAc;AAAxB,OAAR,CAApB;;AACJ,SAAKH,WAAW,CAACS,SAAjB;AACI,aAAOR,aAAa,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAc;AAAxB,OAAR,CAApB;;AACJ,SAAKH,WAAW,CAACU,IAAjB;AACI,aAAOT,aAAa,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAcG,MAAM,CAACK;AAA/B,OAAR,CAApB;;AACJ,SAAKX,WAAW,CAACY,SAAjB;AACI,aAAOX,aAAa,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAcG,MAAM,CAACK;AAA/B,OAAR,CAApB;;AACJ;AACI,aAAON,KAAP;AAVR;AAaH,CAfD;;AAiBA,eAAeD,cAAf","sourcesContent":["import * as actionTypes from '../actions/actionsTypes';\nimport { updatedObject } from '../utility';\n\n\nconst initialState = {\n    counter:0\n}\n\n\nconst counterReducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actionTypes.INCREMENT:\n            return updatedObject(state, {counter: state.counter+1});\n        case actionTypes.DECREMENT:\n            return updatedObject(state, {counter: state.counter-1});\n        case actionTypes.ADD5:\n            return updatedObject(state, {counter: state.counter+action.val});\n        case actionTypes.SUBTRACT5:\n            return updatedObject(state, {counter: state.counter-action.val});\n        default:\n            return state\n\n    }\n}\n\nexport default counterReducer;"]},"metadata":{},"sourceType":"module"}